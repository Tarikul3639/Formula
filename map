//**************************************************frequency count in map****************************************************************
//****************************************************************************************************************************************
//*************************string er******************************
#define freequency_count(mapname)                              \
    string maax;                                               \
    int currentMax = 0;                                        \
    for (auto it = mapname.begin(); it != mapname.end(); it++) \
    {                                                          \
        if (it->second > currentMax)                           \
        {                                                      \
            currentMax = it->second;                           \
            maax = it->first;                                  \
        }                                                      \
    }
//****************************************************************
//**********************************************************map element print in map*************************************************
//****************************************************************************************************************************************
  for (auto it : mp)
    {

        cout << it.first << sp;
    }
//************************************************Fast and second value import***********************************************************
//****************************************************************************************************************************************
int main()
{
    ll sum = 0;
    test
    {
        map<string, int> mp;
        string s;
        ll value;
        
        cin >> s;
        if (s == "donate")
        {
            cin >> value;
            sum = sum + value;
            mp[s] = value;
        }
        else
        {
            cout << sum << nn;
        }
        
    }
    return 0;
}
//****************************************************************************************************************************************
//****************************************************************************************************************************************
